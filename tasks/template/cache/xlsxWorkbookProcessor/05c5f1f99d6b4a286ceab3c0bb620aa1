[{"flow_type":"template","flow_name":"comp_data_items","status":"released","flow_subtype":"component_demo","rows":[{"type":"title","name":"title","value":"Dynamic Data"},{"type":"title","name":"example_1","value":"Example 1: All items"},{"type":"begin_data_items","value":"@data.comp_data_items_list"},{"type":"text","name":"id_@item.id","value":"@item.id"},{"type":"text","name":"text_completed_@item.id","value":"Completed: @item.completed"},{"type":"button","name":"toggle_button_@item.id","value":"Toggle completed","action_list":"click | set_item | completed:!@item.completed"},{"type":"end_data_items"},{"type":"title","name":"example_2","value":"Example 2: Completed items"},{"type":"begin_data_items","value":"comp_data_items_list","parameter_list":"filter: @item.completed","comments":"Data lists can optionally be referenced just by name (without @data)"},{"type":"text","name":"id_@item.id","value":"@item.id"},{"type":"text","name":"text_completed_@item.id","value":"Completed: @item.completed"},{"type":"end_data_items"},{"type":"title","name":"example_2_b","value":"Example 2 b: data list set through local variable"},{"name":"data_list_name","comments":"When there is no data list specified no items will be shown"},{"type":"button","name":"data_list_set","value":"Set data list","action_list":"click | set_local : data_list_name : comp_data_items_list","condition":"!@local.data_list_name"},{"type":"button","name":"data_list_unset","value":"Unset data list","action_list":"click | set_local : data_list_name :","condition":"@local.data_list_name"},{"type":"begin_data_items","value":"@local.data_list_name","parameter_list":"filter: @item.completed","comments":"Data lists can also reference name from variables"},{"type":"text","name":"id_@item.id","value":"@item.id"},{"type":"text","name":"text_completed_@item.id","value":"Completed: @item.completed"},{"type":"end_data_items"},{"type":"title","name":"example_3","value":"Example 3: Set multiple items","comments":"These methods don't work very well, and should probably be improved alongside templating improvements"},{"type":"begin_data_items","value":"@data.comp_data_items_list","parameter_list":"limit: 1","comments":"Hack - it's not currently possible to set item values from outside a loop due to limitations in how local variables are managed\n\nSo instead render a single item with action buttons. Note, filters will also be ignored and any action applied to all items"},{"type":"button","name":"mark_uncompleted_button","value":"Mark all uncompleted","action_list":"click | set_items |\ncompleted:false","comments":"The set_items command will apply to all items in the current loop"},{"type":"button","name":"toggle_all_button","value":"Toggle all (does not work if values different)","action_list":"click | set_items |\ncompleted:!@item.completed","comments":"Note - not currently possible to refer to item value, it will instead toggle all to be opposite of first item"},{"type":"end_data_items"}],"_xlsxPath":"component_sheets/component_data_items.xlsx"},{"flow_type":"data_list","flow_name":"comp_data_items_list","status":"released","flow_subtype":"component_demo","rows":[{"id":"id_1","label":"Task 1","completed":false,"comments":"We will be querying based on completed, so it is important that a value exists in the first row data which can be used to infer the data type\n \nAdditionally the id column must contain string data"},{"id":"id_2","label":"Task 2","completed":true}],"_xlsxPath":"component_sheets/component_data_items.xlsx"}]
