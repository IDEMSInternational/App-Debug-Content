[{"flow_type":"template","flow_name":"debug_nesting_variables","status":"released","flow_subtype":"debug","rows":[{"type":"text","name":"heading_1","value":"TEST 1: Override template variables","exclude_from_translation":true},{"type":"begin_template","name":"two_texts_a","value":"debug_two_texts","exclude_from_translation":true,"comments":"Usually names and values will want to be the same (unless multiple instances used), but different here for better testing purposes"},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"Success: text_1","exclude_from_translation":true,"comments":"whilst this is called 'set_variable', it really behaves as 'overwrite_row'"},{"type":"end_template","exclude_from_translation":true},{"type":"text","name":"heading_2","value":"TEST 2: Override template variables dynamic","exclude_from_translation":true},{"type":"set_variable","name":"var_text_1","value":"Success: text_1","exclude_from_translation":true,"comments":"variables declared can be used anywhere on the sheet, including in child templates"},{"type":"begin_template","name":"two_texts_b","value":"debug_two_texts","exclude_from_translation":true,"comments":"Usually names and values will want to be the same (unless multiple instances used), but different here for better testing purposes"},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"@local.var_text_1","exclude_from_translation":true,"comments":"whilst this is called 'set_variable', it really behaves as 'overwrite_row'"},{"type":"end_template","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_nesting_variables_2","status":"released","flow_subtype":"debug","rows":[{"type":"set_variable","name":"var_text_1","value":"Success: text_1","exclude_from_translation":true,"comments":"variables declared can be used anywhere on the sheet, including in child templates"},{"type":"text","name":"heading_1","value":"TEST 1 - Overwrite a general wrapper to display a named template","exclude_from_translation":true},{"type":"begin_template","name":"debug_wrapper_1","value":"debug_wrapper","exclude_from_translation":true,"comments":"We should be able to achieve the same behaviour using nested properties to access the template within a template"},{"type":"begin_nested_properties","name":"wrapper_template","value":"debug_two_texts","exclude_from_translation":true,"comments":"The value needs to get written into the template wrapper_template"},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"@local.var_text_1","exclude_from_translation":true},{"type":"end_nested_properties","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true},{"type":"text","name":"heading_2","value":"The template below should match the template above, and has been set by 2 levels of nested_properties","exclude_from_translation":true,"condition":false},{"type":"begin_template","name":"debug_wrapper_2","value":"debug_wrapper","exclude_from_translation":true,"condition":false,"comments":"We should be able to achieve the same behaviour using nested properties to access the template within a template"},{"type":"begin_nested_properties","name":"wrapper_template","value":"debug_wrapper","exclude_from_translation":true},{"type":"begin_nested_properties","name":"wrapper_template","value":"debug_two_texts","exclude_from_translation":true},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"@local.var_text_1","exclude_from_translation":true},{"type":"end_nested_properties","exclude_from_translation":true},{"type":"end_nested_properties","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true},{"type":"text","name":"heading_3","value":"The content below adds additional content to the template","exclude_from_translation":true},{"type":"begin_template","name":"debug_wrapper_1","value":"debug_wrapper","exclude_from_translation":true},{"type":"begin_nested_properties","name":"wrapper_template","value":"debug_two_texts","exclude_from_translation":true},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"@local.var_text_1","exclude_from_translation":true},{"type":"end_nested_properties","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_nesting_variables_3","status":"released","flow_subtype":"debug","rows":[{"type":"text","name":"heading_1","value":"TEST 1: Conditional properties","exclude_from_translation":true},{"type":"set_variable","name":"toggle_value","value":true,"exclude_from_translation":true},{"type":"button","name":"toggle_button","value":"Value: @local.toggle_value","action_list":"click | set_local : toggle_value:!@local.toggle_value","exclude_from_translation":true},{"type":"begin_template","name":"two_texts_a","value":"debug_two_texts","exclude_from_translation":true},{"type":"set_variable","name":"child_local_variable","value":"Text variant 1 (toggle to change)","exclude_from_translation":true,"condition":"@local.toggle_value"},{"type":"set_variable","name":"child_local_variable","value":"Text variant 2 (toggle to change)","exclude_from_translation":true,"condition":"!@local.toggle_value"},{"type":"set_variable","name":"child_text_1","value":"Success: text_1","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_nesting_conditional","status":"released","flow_subtype":"debug","rows":[{"name":"text_2","value":"Success: text_2","exclude_from_translation":true},{"name":"text_1_toggle","value":true,"exclude_from_translation":true},{"type":"text","name":"var_toggle_text","value":"The value of the toggle is: @local.text_1_toggle","exclude_from_translation":true},{"type":"text","name":"intro_1","value":"The following template should change text_1 value depending on the value of a variable","exclude_from_translation":true},{"type":"begin_template","name":"direct_template_2","value":"debug_two_texts","exclude_from_translation":true},{"type":"set_variable","name":"child_text_1","value":"Success: text_1 - toggle TRUE","exclude_from_translation":true,"condition":"@local.text_1_toggle"},{"type":"set_variable","name":"child_text_1","value":"Success: text_1 - toggle FALSE","exclude_from_translation":true,"condition":"!@local.text_1_toggle"},{"type":"set_variable","name":"child_text_2","value":"Expected: \"Success: text_2\"\nResult: @local.text_2","exclude_from_translation":true},{"type":"set_variable","name":"child_local_variable","value":"Success: nesting local variable","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true},{"type":"button","name":"toggle text","value":"Toggle value of text_1","action_list":"click | set_local: var_toggle: !@local.var_toggle","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_two_texts","status":"released","flow_subtype":"debug","rows":[{"name":"child_local_variable","exclude_from_translation":true},{"type":"text","name":"child_text_1","value":"Failed: \"text_1\" has not been overwritten","exclude_from_translation":true},{"type":"text","name":"child_text_from_local_variable","value":"@local.child_local_variable","action_list":"click | emit:@local.child_local_variable","exclude_from_translation":true,"parameter_list":"key_1: @local.child_local_variable;","comments":"test setting from a local variable that requires overwrite (starts blank)"}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_nesting_variables_global","status":"released","flow_subtype":"debug","rows":[{"name":"var_text_2","value":"This is text_2","exclude_from_translation":true,"comments":"declare_variable"},{"name":"var_text_4","value":"This is text_4","exclude_from_translation":true,"comments":"declare_variable"},{"type":"begin_template","name":"debug_two_texts","value":"debug_two_texts","exclude_from_translation":true},{"name":"child_text_1","value":"This is text_1 overridden directly in the value","exclude_from_translation":true},{"name":"child_text_2","value":"@global.teen_girl_1 overridden by calling a variable","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true},{"type":"text","name":"text_3","value":"This is text_3 written directly in the value","exclude_from_translation":true},{"type":"text","name":"text_4","value":"@local.var_text_4 calling a variable","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_variable_type","status":"released","flow_subtype":"debug","rows":[{"type":"set_variable","name":"var_counter","value":1,"exclude_from_translation":true},{"type":"set_variable","name":"var_counter_calc","value":"10*@local.var_counter","exclude_from_translation":true,"comments":"Note - this will show correctly first time but not update with var_counter (set_variable initialises only)\nNEED alternative syntax, e.g. calc_variable (or find better way to infer)"},{"type":"set_variable","name":"var_counter_addition","value":"@local.var_counter + @local.var_counter","exclude_from_translation":true},{"type":"set_variable","name":"var_bool_true","value":"@data.debug_vars.bool_true.value","exclude_from_translation":true,"comments":"bool_true"},{"type":"set_variable","name":"var_recursive_lookup","value":"@local.var_bool_true","exclude_from_translation":true},{"type":"set_variable","name":"var_dynamic_nested_name","value":"var_bool_true","exclude_from_translation":true},{"type":"set_variable","name":"var_dynamic_nested","value":"@local.@local.var_dynamic_nested_name","exclude_from_translation":true,"comments":"check replaced variable evaluates"},{"type":"set_variable","name":"var_bool_false","value":"@data.debug_vars.bool_false.value","exclude_from_translation":true,"comments":"bool_false"},{"type":"set_variable","name":"var_number_0","value":"@data.debug_vars.number_0.value","exclude_from_translation":true,"comments":"number_0"},{"type":"set_variable","name":"var_list_1","value":"@data.debug_vars.list_1.value_list","exclude_from_translation":true,"comments":"list_1"},{"type":"set_variable","name":"var_list_1_length","value":"@local.var_list_1.length","exclude_from_translation":true},{"type":"set_variable","name":"var_text_1","value":"@data.debug_vars.text_1.value","exclude_from_translation":true,"comments":"text_1"},{"type":"set_variable","name":"global_text","value":"@global.debug_variable_1","exclude_from_translation":true},{"type":"text","name":"text_2","value":"List length Test: @local.var_list_1_length","exclude_from_translation":true,"comments":"Length of object array"},{"type":"text","name":"text_4wrong","value":"Expected fail calculation: 10*@local.var_counter","exclude_from_translation":true,"comments":"This will not work - the calculated part should be handled as another variable"},{"type":"text","name":"text_4right","value":"Expected pass calculation: @local.var_counter_calc","exclude_from_translation":true},{"type":"text","name":"text_5","value":"Basic Text","exclude_from_translation":true},{"type":"text","name":"text_6","value":"Multiple values: @local.var_bool_true and @local.var_bool_false","exclude_from_translation":true},{"type":"text","name":"text_7","value":"Recursive lookup: @local.var_recursive_lookup","exclude_from_translation":true},{"type":"text","name":"text_dynamic_nested","value":"Dynamic nested pass: @local.var_dynamic_nested","exclude_from_translation":true},{"type":"button","name":"button_number_1_increment","value":"Counter value: @local.var_counter","action_list":"click | set_local:var_counter:@local.var_counter+ 1","exclude_from_translation":true},{"type":"text","name":"text_7","value":"TODO - nested rows","exclude_from_translation":true},{"type":"text","name":"text_8","value":"Expected: global.debug_variable_1 lookup\nResult: @local.global_text","exclude_from_translation":true},{"type":"text","name":"text_9","value":"Global text test: @global.debug_variable_1","exclude_from_translation":true},{"type":"set_variable","name":"var_col_1","value":"@data.debug_vars.collection_1.value_collection","exclude_from_translation":true,"comments":"Note - we cannot specify _collection in the name as it will be parsed differently"},{"type":"set_variable","name":"var_col_1_key1","value":"@local.var_col_1.key1","exclude_from_translation":true},{"type":"text","name":"text_col","value":"col_1 (object): @local.var_col_1","exclude_from_translation":true},{"type":"text","name":"text_col_key","value":"key1: @local.var_col_1_key1","exclude_from_translation":true},{"type":"text","name":"test_col_key","value":"@local.var_col_1_key1 === \"val1\"","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"template","flow_name":"debug_wrapper","status":"released","flow_subtype":"debug","rows":[{"type":"begin_template","name":"wrapper_template","exclude_from_translation":true,"comments":"This template simply renders the debug_two_texts template, for testing nested_properties"},{"name":"text_1","value":"No text to display in wrapper_template","exclude_from_translation":true},{"type":"end_template","exclude_from_translation":true}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"},{"flow_type":"data_list","flow_name":"debug_variable_data","status":"released","data_list_name":"debug_vars","flow_subtype":"debug","rows":[{"id":"number_1","value":1},{"id":"bool_true","value":true},{"id":"bool_false","value":false},{"id":"number_0","value":0},{"id":"list_1","value_list":"1; 2; 3;","comment":"if referring to _list the value will already be parsed as array"},{"id":"text_1","value":"text1"},{"id":"collection_1","value_collection":"key1:val1; key2:val2","comment":"if referring to _collection the value will already be parsed as object"}],"_xlsxPath":"debug_sheets/to_be_sorted/debug_nesting_variables.xlsx"}]
